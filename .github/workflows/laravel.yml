name: Laravel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests-and-build:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Configurar PHP y extensiones necesarias
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, bcmath, sqlite

      # 3. Instalar dependencias de Composer (Laravel + dev)
      - name: Instalar dependencias de Composer
        run: composer install --prefer-dist --no-interaction --optimize-autoloader

      # 4. Copiar .env y generar APP_KEY
      - name: Copiar .env y generar clave
        run: |
          cp .env.example .env
          php artisan key:generate --ansi

      # 5. Crear base de datos SQLite
      - name: Crear base de datos SQLite
        run: |
          mkdir -p database
          touch database/database.sqlite

      # 6. Instalar ParaTest para tests paralelos
      - name: Instalar ParaTest
        run: composer require --dev brianium/paratest --with-all-dependencies

      # 7. Ejecutar migraciones (antes de los tests)
      - name: Ejecutar migraciones
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate --force

      # 8. Ejecutar tests en paralelo
      - name: Ejecutar tests (con ParaTest)
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test --parallel

      # 9. Instalar Node y compilar assets (npm run build)
      - name: Preparar Node y compilar frontend
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: |
          npm ci
          npm run build

      # 10. Subir artefactos compilados como resultado
      - name: Subir artefactos del build
        uses: actions/upload-artifact@v4
        with:
          name: laravel-ci-build
          path: |
            public/build
            bootstrap/cache
