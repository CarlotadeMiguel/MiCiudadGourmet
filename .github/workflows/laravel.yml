# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  DB_CONNECTION: sqlite
  DB_DATABASE: database/database.sqlite

jobs:
  prepare:
    name: Prepare Environment
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify PHP and Composer installation
        run: |
          php -v
          composer --version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Clean workspace and setup Laravel environment
        run: |
          rm -rf vendor/ node_modules/
          mkdir -p database
          touch database/database.sqlite

      - name: Copy .env file for CI
        run: cp .env.example .env

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader

      - name: Generate APP_KEY and run migrations
        run: |
          php artisan key:generate --ansi
          php artisan migrate --force

      - name: Upload app artifacts (vendor, .env, db)
        uses: actions/upload-artifact@v4
        with:
          name: laravel-app
          path: |
            vendor/
            .env
            database/database.sqlite
          retention-days: 1

  test:
    name: Run Tests
    runs-on: [self-hosted, Linux, X64]
    needs: prepare
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download app artifacts
        uses: actions/download-artifact@v4
        with:
          name: laravel-app
          path: .

      - name: Run tests (ParaTest)
        run: php artisan test --parallel --colors=never

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: storage/logs/
          retention-days: 5

  build:
    name: Build Assets
    runs-on: [self-hosted, Linux, X64]
    needs: prepare
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Download app artifacts
        uses: actions/download-artifact@v4
        with:
          name: laravel-app
          path: .

      - name: Install JS dependencies
        run: npm ci --legacy-peer-deps

      - name: Build frontend assets
        run: npx vite build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-assets
          path: |
            public/build/
            public/mix-manifest.json
          retention-days: 1

  deploy:
    name: Deploy to Production
    runs-on: [self-hosted, Linux, X64]
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download app artifacts
        uses: actions/download-artifact@v4
        with:
          name: laravel-app
          path: .

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-assets
          path: .

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          TARGET_DIR: ${{ secrets.TARGET_DIR }}
        run: |
          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

          # Sincronizar c√≥digo y assets
          rsync -avz --delete \
            --exclude=".git" \
            --exclude="storage/" \
            --exclude=".env" \
            ./ "$SSH_USER@$SSH_HOST:$TARGET_DIR"

          # Crear carpetas necesarias, corregir permisos y ejecutar comandos post-deploy
          ssh -p "${SSH_PORT:-22}" "$SSH_USER@$SSH_HOST" "
            cd $TARGET_DIR && \
            mkdir -p storage/framework/views storage/framework/cache storage/framework/sessions storage/logs bootstrap/cache && \
            sudo chown -R $SSH_USER:apache storage database bootstrap/cache || true && \
            sudo chmod -R 775 storage database bootstrap/cache || true && \
            php artisan migrate --force && \
            php artisan config:cache && \
            php artisan route:cache && \
            php artisan view:cache && \
            php artisan queue:restart
          "
